

Selenium
dumy websites :-
https://rahulshettyacademy.com/dropdownsPractise/
https://rahulshettyacademy.com/locatorspractice/
https://rahulshettyacademy.com/dropdownsPractise/
https://testpages.eviltester.com/
"http://qaclickacademy.com/practice.php"===Links

Syncronisation
1) Implicit Wait
-->applied Globally for all drivers in program
Cons: Performance cause issues are not cought

2)Explicict wait
Wait applied only at targeted element, so no performacne issue
cons:
More code

3) Fluent Wait
Fluent wait find the webelement repetedly at regular interval of time until timeout or till the objects get found
Bothe WebDriverWait and Fluent Wait classes implement Wait Interface

//ChromeOptions--Set the behavior of chrome browser
In Selenium WebDriver (Java), ChromeOptions is a class used to customize and configure how Google Chrome behaves when running
automated tests.
It allows you to set arguments, experimental options, user profiles, headless mode, etc.


public class ChromeOptionsExample {
    public static void main(String[] args) {
        ChromeOptions options = new ChromeOptions();

        // Example: Run Chrome in headless mode
        options.addArguments("--headless");

        // Example: Maximize window
        options.addArguments("--start-maximized");

        // Launch browser with options
        WebDriver driver = new ChromeDriver(options);
        driver.get("https://www.google.com");
    }
}

======================
//Get Height and Width of text box

                             // System.out.println(Reference of WebElement.getRect().getDimension().getHeight());
                              //System.out.println(Reference of WebElement.getRect().getDimension().getWidth());
============================================================================
Selenium by Rahul Shetty
---------------------------------

Feature of Selenium
==========================
1)Selenium is open source Automation testing tool
2)It is exclusively for web based app
3)Selenium Supports multiple browsers-
Chrome,firefox,IE,Safari
4)Selenium works with multiple platforms
Windows, Apple OS, Linux
5)Selenium can be coded in multiple languages-
Java,C#,Python,avascript,PHP,Ruby
6)Difference between Selenium and Webdriver?


=================================================
TestNG
================================================
-Is Testing Framework
-Test NG is not depends on Java Compiler to run (no need of main method to run)

How to run Tests with TestNG?
Your need to have @Test Annotaion followed by methods

you can define multiple Test in single class

you can modularize the test cases based upon functionality and triggered accordingly

you can also get a control on running specific methods from test cases

testing.xml file-->select project -->create new File
--------------------------------------------------------
<!DOCTYPE suite SYSTEM "https://testng.org/testng-1.0.dtd" >
<suite name="LoanDepartment">

    <test name="Personal Loan">
        <classes>
            <class name="TestNG.CarLoan"/>
            <class name="selenium.TestNG.TestDemo"/>
        </classes>
    </test>
 <test name="Car Loan">
        <classes>
            <class name="TestNG.Loan"></class>
            <methods>
                <exclude name="TestNG.childLoan.*">////////////////Exclude all test methods which have name starts with "childLoan" same like we can use for include///////
              </exclude>
            </methods>
        </classes>
    </test>

</suite>


-----------------Execute all package test cases

    <test name="Personal Loan">
        <packages>
            <package name="TestNg"></package>
        </packages>


-----------------------------------------=====================================Annotations
@BeforeSuite – Runs once before all tests in the suite.
(Example: Start report, connect to DB)

@AfterSuite – Runs once after all tests in the suite.
(Example: Close report, disconnect DB)

Test Level (as per <test> tag in testng.xml)
@BeforeTest – Runs before any class in that <test> block.
(Example: Setup test environment or load config)

@AfterTest – Runs after all classes in that <test> block.
(Example: Cleanup test environment)

Class Level
@BeforeClass – Runs once before all test methods in a class.
(Example: Open browser)

@AfterClass – Runs once after all test methods in a class.
(Example: Close browser)

@BeforeMethod – Runs before each test method.
(Example: Login before each test)

@AfterMethod – Runs after each test method.
(Example: Logout after each test)


Test Method
@Test – Marks a method as a test case.
(Example: Actual test logic goes here)

Extras
@Parameters – Pass data from testng.xml to test methods.

@DataProvider – Supply multiple sets of data to a test method (Data-driven).

@BeforeGroups / @AfterGroups – Run before/after specific groups.


@BeforeClass / @AfterClass → Run once per class.

@BeforeMethod / @AfterMethod → Run before & after every test method.



@BeforeSuite → Start reporting tools like Extent Report.

@BeforeTest → Setup environment (browser type from testng.xml).

@BeforeClass → Open browser and navigate to base URL.

@BeforeMethod → Login to application.

@Test → Execute functional test steps.

@AfterMethod → Logout or reset app state.

@AfterClass → Close browser.

@AfterTest → Collect results for this <test> group.

@AfterSuite → Close report and send email.























